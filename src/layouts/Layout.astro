---
interface Props {
  title?: string;
  description?: string;
}
const { title = "AGWS", description = "AGWS website" } = Astro.props;
---

<!doctype html>
<html lang="fr">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
        <meta name="description" content={description} />
        <title>{title}</title>
    </head>
    <body>
        <slot />
    </body>
</html>

<script is:inline>
  // Exécuter immédiatement
  (function() {
    // Vérifier le thème enregistré ou utiliser la préférence système
    const savedTheme = localStorage.getItem('theme');
    const systemDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    // Définir le thème initial
    if (savedTheme) {
      document.documentElement.setAttribute('data-theme', savedTheme);
    } else if (systemDarkMode) {
      document.documentElement.setAttribute('data-theme', 'dark');
    } else {
      document.documentElement.setAttribute('data-theme', 'light');
    }
    
    // Fonction pour basculer le thème - sera utilisée par le addEventListener au chargement
    window.toggleTheme = function() {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      
      console.log('Thème changé de', currentTheme, 'à', newTheme);
    };
    
    // Ajouter les écouteurs d'événements après le chargement complet de la page
    window.addEventListener('load', function() {
      const themeToggles = document.querySelectorAll('.theme-toggle, .theme-toggle-desktop, .theme-toggle-mobile, .theme-toggle-footer');
      
      themeToggles.forEach(button => {
        button.addEventListener('click', window.toggleTheme);
      });
      
      console.log('Écouteurs d\'événements ajoutés aux boutons de thème:', themeToggles.length);
    });
  })();
</script>

<style is:global>
    :root {
        --bg-color: #f1f1f1;
        font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    [data-theme="dark"] {
        --bg-color: #1D1D1F;
    }
    
    html,
    body {
        margin: 0;
        padding: 0;
        width: 100%;
        min-height: 100vh;
        background-color: var(--bg-color);
        transition: background-color 0.3s ease;
    }
    
    body.menu-open {
        overflow: hidden;
    }
</style>